cameras:
    camera1:
        type: perspective

lights:
    light1:
        type: directional
        direction: [0, 1, -.5]
        diffuse: .3
        ambient: 1

global:
    _highlightSelect: false
    _range: "day"
    set_width: function () {
                    if (feature.volume == null) {
                        return 6
                    } else if (feature.volume < 1000) {
                        return 10;
                    } else if (feature.volume < 2500) {
                        return 14;
                    } else if (feature.volume < 5000) {
                        return 18;
                    } else if (feature.volume < 10000) {
                        return 22;
                    } else if (feature.volume < 25000) {
                        return 26;
                    }
                    return 5;
                }
    set_colour: function () {
                    if (feature.has_data == 0) {
                        return '#B1A38E'
                    }
                    var data;
                    if (global._range == "day") {
                        data = feature.pct_change_day;
                    } else if (global._range == "month") {
                        data = feature.pct_change_month;
                    } else if (global._range == "year") {
                        data = feature.pct_change_year;
                    }
                    if (data > 20) {
                        return '#FF0000';
                    } else if (data > 15) {
                        return '#FF4400';
                    } else if (data > 10) {
                        return '#FF8800';
                    } else if (data > 0) {
                        return '#FFCC00';
                    } else if (data == 0) {
                        return '#FFFF00'
                    } else if (data >= -10) {
                        return '#CCFF00';
                    } else if (data >= -15) {
                        return '#88FF00';
                    } else if (data >= -20) {
                        return '#44FF00';
                    } else if (data < -20) {
                        return '#00FF00';
                    }
                    return '#000000';
                }

sources:
    local:
        type: GeoJSON
        url: street_volumes.json
        max_zoom: 20
        min_zoom: 7

scene:
    background:
        color: white

layers:
    roads:
        data: { source: local }
        # default draw group, un-assigned features will follow this
        draw:
            text:
                repeat_group: roads-fewer-labels
                repeat_distance: 500px
        major_arterial:
            filter: function () { return (feature.feature_code_desc == 'Major Arterial'); }
            draw:
                lines:
                    order: function() {
                                if (feature.direction == 'Northbound' || feature.direction == 'Southbound') {
                                    return 16;
                                } else {
                                    return 15;
                                }
                            }
                    color: global.set_colour
                    width: global.set_width
                    cap: butt
                    interactive: true
        major_arterial_ramp:
            filter: function () {
                        if (global._ramps == false) {
                            return (feature.feature_code_desc == false); 
                        } else {
                            return (feature.feature_code_desc == 'Major Arterial Ramp');
                        }
                    }
            draw:
                lines:
                    order: function() {
                                if (feature.direction == 'Northbound' || feature.direction == 'Southbound') {
                                    return 14;
                                } else {
                                    return 13;
                                }
                            }
                    color: global.set_colour
                    width: global.set_width
                    cap: butt
                    interactive: true
                    outline:
                        width: 2px
                        color: '#A9A9A9' # light gray
        minor_arterial:
            filter: function () { return (feature.feature_code_desc == 'Minor Arterial'); }
            draw:
                lines:
                    order: function() {
                                if (feature.direction == 'Northbound' || feature.direction == 'Southbound') {
                                    return 12;
                                } else {
                                    return 11;
                                }
                            }
                    color: global.set_colour
                    width: global.set_width
                    cap: butt
                    interactive: true
        minor_arterial_ramp:
            filter: function () {
                        if (global._ramps == false) {
                            return (feature.feature_code_desc == false); 
                        } else {
                            return (feature.feature_code_desc == 'Minor Arterial Ramp');
                        }
                    }
            draw:
                lines:
                    order: function() {
                                if (feature.direction == 'Northbound' || feature.direction == 'Southbound') {
                                    return 10;
                                } else {
                                    return 9;
                                }
                            }
                    color: global.set_colour
                    width: global.set_width
                    cap: butt
                    interactive: true
                    outline:
                        width: 1px
                        color: '#A9A9A9' # light gray
        collector:
            filter: function () { return (feature.feature_code_desc == 'Collector'); }
            draw:
                lines:
                    order: function() {
                                if (feature.direction == 'Northbound' || feature.direction == 'Southbound') {
                                    return 8;
                                } else {
                                    return 7;
                                }
                            }
                    color: global.set_colour
                    width: global.set_width
                    cap: butt
                    interactive: true
        collector_ramp:
            filter: function () {
                        if (global._ramps == false) {
                            return (feature.feature_code_desc == false); 
                        } else {
                            return (feature.feature_code_desc == 'Collector Ramp');
                        }
                    }
            draw:
                lines:
                    order: function() {
                                if (feature.direction == 'Northbound' || feature.direction == 'Southbound') {
                                    return 6;
                                } else {
                                    return 5;
                                }
                            }
                    color: global.set_colour
                    width: global.set_width
                    cap: butt
                    interactive: true
                    outline:
                        width: 2px
                        color: '#A9A9A9' # light gray
        local:
            filter: function () { return (feature.feature_code_desc == 'Local'); }
            draw:
                lines:
                    order: 2
                    color: global.set_colour
                    width: global.set_width
                    cap: butt
                    interactive: true
        pending:
            filter: function () { return (feature.feature_code_desc == 'Pending'); }
            draw:
                lines:
                    order: 1
                    color: global.set_colour
                    width: global.set_width
                    cap: butt
                    interactive: true
        road_highlight:
            filter: function () { return (feature.centreline_id == global._highlightSelect); }
            draw:
                lines:
                    order: 11
                    color: white
                    cap: butt
                    outline:
                        width: 3px
                        color: '#0dd5fc' # highlighter blue